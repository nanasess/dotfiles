# -*- mode:shell-script -*-

if [ -f $HOME/Applications/Emacs.app/Contents/Resources/bin/emacsclient ]
then
    export EDITOR=$HOME/Applications/Emacs.app/Contents/Resources/bin/emacsclient
else
    if which emacsclient > /dev/null; then export EDITOR=emacsclient; fi
fi

export PATH=$HOME/bin:$HOME/.nodebrew/current/bin:$HOME/go/bin:$HOME/.cpan/CPAN/bin:$HOME/.cabal/bin:/Library/Frameworks/HaskellPlatform.framework/bin:/usr/local/texlive/2014/bin/x86_64-darwin:/opt/local/lib/postgresql91/bin:/usr/local/heroku/bin:$HOME/bin/jdk-11.0.23+9/bin:$HOME/.dotnet/tools:$HOME/.cargo/bin:/opt/local/bin:/usr/local/bin:$PATH

export UID=${UID} GID=${GID}

export ORACLE_BASE=~/oracle
export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/client_1
export DYLD_LIBRARY_PATH=$ORACLE_HOME/lib:$DYLD_LIBRARY_PATH
export PATH=$ORACLE_HOME/bin:$PATH
export NLS_LANG=japanese_japan.UTF8

export PERL5LIB="$HOME/.cpan/CPAN/lib/perl5${PERL5LIB+:}$PERL5LIB";
export PERL_LOCAL_LIB_ROOT="$HOME/.cpan/CPAN${PERL_LOCAL_LIB_ROOT+:}$PERL_LOCAL_LIB_ROOT";
export PERL_MB_OPT="--install_base \"$HOME/.cpan/CPAN\"";
export PERL_MM_OPT="INSTALL_BASE=$HOME/.cpan/CPAN";

export ASPNETCORE_ENVIRONMENT=Development
export BAT_THEME=ansi-light

autoload bashcompinit && bashcompinit
#source $HOME/lib/azure-cli/az.completion
#eval $(/usr/libexec/path_helper -s)

#source $HOME/.phpbrew/bashrc
export PATH=$HOME/.rbenv/bin:$PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.symfony/bin:$PATH
export PATH=$HOME/.symfony5/bin:$PATH
export PATH=$HOME/.composer/vendor/bin:$PATH
export PATH=$HOME/google-cloud-sdk/bin:$PATH
export PATH=/usr/local/bin:$PATH
export PATH=/usr/local/sbin:$PATH
# export PATH=$HOME/.emacs.d/bin:$PATH
#export PATH="$(brew --prefix openssl)/bin:$PATH"
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi
if which stack > /dev/null; then eval "$(stack --bash-completion-script stack)"; fi
[[ -e ~/.phpbrew/bashrc ]] && source ~/.phpbrew/bashrc
# export PHPBREW_SET_PROMPT=1
export WEBKIT_FORCE_SANDBOX=0

if [ ! -L /tmp/.X11-unix ]
then
    rm -rf /tmp/.X11-unix
    ln -s /mnt/wslg/.X11-unix /tmp/.X11-unix
fi
if [ ! -L "${XDG_RUNTIME_DIR}/wayland-0" ]
then
    rm -rf "${XDG_RUNTIME_DIR}/wayland-0*"
    ln -s /mnt/wslg/runtime-dir/wayland-0* "$XDG_RUNTIME_DIR"
fi

# if which xrdb > /dev/null; then xrdb -merge ~/.Xresources; fi
if [ -z "$WAYLAND_DISPLAY" ]
then
    if which setxkbmap > /dev/null; then setxkbmap -layout us; fi
fi

# require 1Password integration
# source $HOME/.config/op/plugins.sh

# if which docker > /dev/null; then
#    export ONEDRIVE_DATA_DIR="$HOME/OneDrive - Skirnir Inc"
#    export ONEDRIVE_GID=$(id -g)
#    export ONEDRIVE_UID=$(id -u)
#    [ ! "$(docker ps -a | grep onedrive)" ] &&
#        docker run -d --rm -it --name onedrive -v $HOME/.config/onedrive:/onedrive/conf \
#               -v "${ONEDRIVE_DATA_DIR}:/onedrive/data" \
#               -e "ONEDRIVE_UID=${ONEDRIVE_UID}" \
#               -e "ONEDRIVE_GID=${ONEDRIVE_GID}" \
#               -e "ONEDRIVE_RESYNC=1" driveone/onedrive:latest > /dev/null
# fi
